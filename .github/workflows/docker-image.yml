
name: Docker Image CI And Deploy In Portainer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}
  STACK_NAME: "pythonlapazwebsite"

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker Login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
    -
      name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./website
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{secrets.DOCKER_IMAGE}}:${{env.IMAGE_TAG}},${{secrets.DOCKER_IMAGE}}:latest
        
  deploy:
    needs: build
    name: Deploy Image on Portainer
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2

    - name: Read docker-compose.yml
      id: composefile
      uses: juliangruber/read-file-action@v1
      with:
        path: ./docker-compose.githubaction.yml

    - name: Echo composefile.yml
      run: echo "${{ steps.composefile.outputs.content }}"

    - name: portainer stack deploy
      uses: LGinC/portainer-stack-deploy@1.0
      with:
        # portainer server url
        serverurl: ${{ secrets.PORTAINER_HOSTNAME }}
        # portainer admin user name
        username: ${{ secrets.PORTAINER_USERNAME }}
        # portainer admin user password
        password: ${{ secrets.PORTAINER_PASSWORD }}
        # portainer EndpointId,default 1
        endpointId: ${{ secrets.PORTAINER_ENDPOINT_ID }}
        # name of stack, lowercase
        imagenames: ${{secrets.DOCKER_IMAGE}}:${{env.IMAGE_TAG}}
        stackname: ${{env.STACK_NAME}}
        env: |
          IMAGE=${{secrets.DOCKER_IMAGE}}:${{env.IMAGE_TAG}}
          ${{secrets.PORTAINER_ENV}}
        # variables: # optional
        # # content of docker-compose.yml
        # docker_compose: 
        # docker-compose.yml in repository relative path
        docker_compose: |
          ${{ steps.composefile.outputs.content }}
        # # username of git repository
        # repo_username: # optional
        # # password of git repository
        # repo_password: # optional
